{
  "resourceType": "Library",
  "meta": {
    "profile": [
      "http://hl7.eu/fhir/ig/gravitate-health/StructureDefinition/lens"
    ]
  },
  "extension": [
    {
      "url": "http://hl7.eu/fhir/ig/gravitate-health/StructureDefinition/lee-version",
      "valueString": "dev"
    }
  ],
  "url": "https://gravitate-health.lst.tfo.upm.es/ips/api/fhir/Library/592",
  "identifier": [
    {
      "system": "http://gravitate-health.lst.tfo.upm.es",
      "value": "preadmission-lens"
    }
  ],
  "version": "0.0.1",
  "name": "preadmission Lens",
  "_name": {
    "extension": [
      {
        "url": "http://hl7.org/fhir/StructureDefinition/translation",
        "extension": [
          {
            "url": "lang",
            "valueCode": "es"
          },
          {
            "url": "content",
            "valueString": "Lente de Interacci\u00f3n"
          }
        ]
      },
      {
        "url": "http://hl7.org/fhir/StructureDefinition/translation",
        "extension": [
          {
            "url": "lang",
            "valueCode": "pt"
          },
          {
            "url": "content",
            "valueString": "Lente de Intera\u00e7\u00e3o"
          }
        ]
      },
      {
        "url": "http://hl7.org/fhir/StructureDefinition/translation",
        "extension": [
          {
            "url": "lang",
            "valueCode": "da"
          },
          {
            "url": "content",
            "valueString": "Interaktionslinse"
          }
        ]
      }
    ]
  },
  "date": "2024-06-12T13:40:03.690Z",
  "title": "preadmission Lens",
  "_title": {
    "extension": [
      {
        "url": "http://hl7.org/fhir/StructureDefinition/translation",
        "extension": [
          {
            "url": "lang",
            "valueCode": "es"
          },
          {
            "url": "content",
            "valueString": "Lente de Interacci\u00f3n"
          }
        ]
      },
      {
        "url": "http://hl7.org/fhir/StructureDefinition/translation",
        "extension": [
          {
            "url": "lang",
            "valueCode": "pt"
          },
          {
            "url": "content",
            "valueString": "Lente de Intera\u00e7\u00e3o"
          }
        ]
      },
      {
        "url": "http://hl7.org/fhir/StructureDefinition/translation",
        "extension": [
          {
            "url": "lang",
            "valueCode": "da"
          },
          {
            "url": "content",
            "valueString": "Interaktionslinse"
          }
        ]
      }
    ]
  },
  "status": "draft",
  "experimental": true,
  "type": {
    "coding": [
      {
        "code": "logical-library"
      }
    ]
  },
  "publisher": "Gravitate Health Project - UPM Team",
  "contact": [
    {
      "name": "Gravitate Health",
      "telecom": [
        {
          "system": "url",
          "value": "https://www.gravitatehealth.eu/"
        }
      ]
    }
  ],
  "description": "A lens that highlight any information related to interactions between other mediciones or ePIs",
  "_description": {
    "extension": [
      {
        "url": "http://hl7.org/fhir/StructureDefinition/translation",
        "extension": [
          {
            "url": "lang",
            "valueCode": "es"
          },
          {
            "url": "content",
            "valueString": "Una lente que resalta cualquier informaci\u00f3n relacionada con interacciones entre otros medicamentos o ePIs."
          }
        ]
      },
      {
        "url": "http://hl7.org/fhir/StructureDefinition/translation",
        "extension": [
          {
            "url": "lang",
            "valueCode": "pt"
          },
          {
            "url": "content",
            "valueString": "Uma lente que destaca qualquer informa\u00e7\u00e3o relacionada com intera\u00e7\u00f5es entre outros medicamentos ou ePIs."
          }
        ]
      },
      {
        "url": "http://hl7.org/fhir/StructureDefinition/translation",
        "extension": [
          {
            "url": "lang",
            "valueCode": "da"
          },
          {
            "url": "content",
            "valueString": "En linse, der fremh\u00e6ver al information relateret til interaktioner mellem andre l\u00e6gemidler eller ePI'er."
          }
        ]
      }
    ]
  },
  "jurisdiction": [
    {
      "coding": [
        {
          "code": "EU",
          "system": "urn:iso:std:iso:3166"
        }
      ]
    }
  ],
  "purpose": "Clarify the important things related to interactions between other ePIs in the ePI provided",
  "_purpose": {
    "extension": [
      {
        "url": "http://hl7.org/fhir/StructureDefinition/translation",
        "extension": [
          {
            "url": "lang",
            "valueCode": "es"
          },
          {
            "url": "content",
            "valueString": "Aclarar los aspectos importantes relacionados con interacciones entre otros ePIs en el ePI proporcionado."
          }
        ]
      },
      {
        "url": "http://hl7.org/fhir/StructureDefinition/translation",
        "extension": [
          {
            "url": "lang",
            "valueCode": "pt"
          },
          {
            "url": "content",
            "valueString": "Esclarecer os pontos importantes relacionados com intera\u00e7\u00f5es entre outros ePIs no ePI fornecido."
          }
        ]
      },
      {
        "url": "http://hl7.org/fhir/StructureDefinition/translation",
        "extension": [
          {
            "url": "lang",
            "valueCode": "da"
          },
          {
            "url": "content",
            "valueString": "Klarg\u00f8r de vigtige ting vedr\u00f8rende interaktioner mellem andre ePI'er i den angivne ePI."
          }
        ]
      }
    ]
  },
  "usage": "This lens requires a preprocessed ePI, and an IPS to work. You can import this lens directly to your FHIR Server which suports Library Resource type.",
  "_usage": {
    "extension": [
      {
        "url": "http://hl7.org/fhir/StructureDefinition/translation",
        "extension": [
          {
            "url": "lang",
            "valueCode": "es"
          },
          {
            "url": "content",
            "valueString": "Esta lente requiere una ePI preprocesada y un IPS para funcionar. Puedes importar esta lente directamente en tu servidor FHIR que soporte el tipo de recurso Library."
          }
        ]
      },
      {
        "url": "http://hl7.org/fhir/StructureDefinition/translation",
        "extension": [
          {
            "url": "lang",
            "valueCode": "pt"
          },
          {
            "url": "content",
            "valueString": "Esta lente requer uma ePI pr\u00e9-processada e um IPS para funcionar. Podes importar esta lente diretamente para o teu servidor FHIR que suporte o tipo de recurso Library."
          }
        ]
      },
      {
        "url": "http://hl7.org/fhir/StructureDefinition/translation",
        "extension": [
          {
            "url": "lang",
            "valueCode": "da"
          },
          {
            "url": "content",
            "valueString": "Denne linse kr\u00e6ver en forbehandlet ePI og en IPS for at fungere. Du kan importere denne linse direkte til din FHIR-server, som underst\u00f8tter ressource-typen Library."
          }
        ]
      }
    ]
  },
  "copyright": "\u00a9 2024 Gravitate Health",
  "parameter": [
    {
      "use": "in",
      "documentation": "parameter if it exists",
      "type": "CodeableConcept"
    }
  ],
  "content": [
    {
      "contentType": "application/javascript",
      "data": ""
    }
  ],
  "data": ""
}